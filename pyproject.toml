[project]
name = "osparc_filecomms"
description = "oSparc file communications"
authors = [
    {name="Werner Van Geit @ IT'IS Zurich"}
]
license={file="LICENSE.txt"}
readme="README.md"
version="0.9.19"

[build-system]
requires=["setuptools"]
build-backend = "setuptools.build_meta"

[tool.setuptools]
packages = ["osparc_filecomms"]
package-dir = {"osparc_filecomms" = "src"}

[project.optional-dependencies]
test = ["pytest", "pytest-mock"]

[tool.pytest.ini_options]
testpaths = ["tests"]

[tool.distutils.bdist_wheel]
universal = true

[tool.semantic_release]
assets = []
commit_message = "{version}\n\nAutomatically generated by python-semantic-release"
commit_parser = "tag"
logging_use_named_masks = false
major_on_zero = true
tag_format = "{version}"
version_variables = ["src/_version.py:__version__"]
version_toml = ["pyproject.toml:project.version"]

[tool.semantic_release.branches.main]
match = ""
prerelease_token = "rc"
prerelease = false

[tool.semantic_release.changelog]
template_dir = "templates"
changelog_file = "CHANGELOG.md"
exclude_commit_patterns = []

[tool.semantic_release.changelog.environment]
block_start_string = "{%"
block_end_string = "%}"
variable_start_string = "{{"
variable_end_string = "}}"
comment_start_string = "{#"
comment_end_string = "#}"
trim_blocks = false
lstrip_blocks = false
newline_sequence = "\n"
keep_trailing_newline = false
extensions = []
autoescape = true

[tool.semantic_release.commit_author]
env = "GIT_COMMIT_AUTHOR"
default = "semantic-release <semantic-release>"

[tool.semantic_release.commit_parser_options]
patch_tag = ""

[tool.semantic_release.remote]
name = "origin"
type = "github"
ignore_token_for_push = false

[tool.semantic_release.remote.token]
env = "GH_TOKEN"

[tool.semantic_release.publish]
dist_glob_patterns = ["dist/*"]
upload_to_vcs_release = true

